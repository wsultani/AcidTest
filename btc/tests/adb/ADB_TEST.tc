#!/usr/bin/expect --

proc ADB_TEST {} {
#--------------------------------------------------------------------------------------------#
variable p [namespace tail [lindex [info level 0] 0]]
set ${p}(Name)		$p
set ${p}(type)		{testcase}
set ${p}(Description)	{Run the nrsensors cmd and look for a zero value. If found fail test, else pass}
set ${p}(Suite)		{hardware}
set ${p}(Comments)	{}
set ${p}(Author)	{wsultani}
set ${p}(Required)	{::adb}
set ${p}(Created)	{08-06-27}
set ${p}(EOL)		{}
update_mysql_db ${p}
#--------------------------------------------------------------------------------------------#

    set ret [$::adb adb_getprop]
    if { [problem_with $ret data] } {
        write_error [data_from $ret]
        return [list false [data_from $ret]]
    }
    
    set app(name) PeelPhone-Debug_QA_6657.apk
    set app(pkg) com.peel.app
    set app(path) "/var/www/html/automation/btc/tests/adb/"

    set test(name) "PeelHandsetTest.apk"
    set test(pkg) "com.peel.android.test"
    set test(path) "/var/www/html/automation/btc/tests/adb/"
    set test(class) "com.peel.android.SettingsTests.TestSettings_CheckVersion"

    #write_step "Get version info .."
    #set ret [$::adb adb_getpkg_info [file join $app(path) $app(name)]]
    #if { [problem_with $ret data] } {
    #    write_error [data_from $ret]
    #    return [list false [data_from $ret]]
    #}

    set ret [$::adb adb_launch_app [file join $app(path) $app(name)]]
    if { [problem_with $ret data] } {
        write_error [data_from $ret]
        return [list false [data_from $ret]]
    }

puts $ret
exit

    write_step "Get system info .."

    if (0) {
        foreach ap "app test" {
            write_step "Uninstalling [set ${ap}(pkg)] .."
            set ret [$::adb adb_uninstall [set ${ap}(pkg)]]
            if { [problem_with $ret data] } {
                write_error [data_from $ret]
                return [list false [data_from $ret]]
            }

            write_step "Installing [set ${ap}(name)] .."
            set ret [$::adb adb_install [file join [set ${ap}(path)] [set ${ap}(name)]]]
            if { [problem_with $ret data] } {
                write_error [data_from $ret]
                return [list false [data_from $ret]]
            }
        }

    write_step "Running Test $test(class)"
    set ret [$::adb adb_runtest $test(pkg) $test(class)]
    if { [problem_with $ret data] } {
        write_error [data_from $ret]
        return [list false [data_from $ret]]
    }
}

    set evcount 1000
    set margs(--throttle) 100
    set margs(--pct-majornav) 0
    set margs(--pct-syskeys) 0
    set margs(--pct-touch) 50
    set margs(--pct-motion) 50
    set margs(--seed) 50

    set ret [$::adb adb_runmonkey com.peel.android "$evcount" "margs"]
    if { [problem_with $ret] } {
        write_error "[data_from $ret]"
        return [list false "[data_from $ret]"]
    }

    return [list true ""]
}
# this is required for auto loading
package provide ADB_TEST 1.0
